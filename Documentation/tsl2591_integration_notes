TSL2591 Integration Notes

I2C Address = 0x29
I2C Address (Secondary - for RO) = 0x28

Pinout;
Pin 1: SCL I2C Clock
Pin 2: Interrupt
Pin 3: GND
Pin 4: Do not connect
Pin 5: VDD
Pin 6: SDA I2C Data

Registers;
0x00 = ENABLE states and interrupts
0x01 = CONFIG ALS gain and integration time
0x04 = ALS interrupt low threshold low byte
0x05 = ALS interrupt low threshold high byte
0x06 = ALS interrupt high threshold low byte
0x07 = ALS interrupt high threshold high byte
0x08 = No persist ALS interrupt low threshold low byte
0x09 = No persist ALS interrupt low threshold high byte
0x0A = No persist ALS interrupt high threshold low byte
0x0B = No persist ALS interrupt high threshold high byte
0x0C = Interrupt persistence filter
0x11 = Package ID
0x12 = Device ID
0x13 = Device status
0x14 = Channel 0 ADC low data byte
0x15 = Channel 0 ADC high data byte
0x16 = Channel 1 ADC low data byte
0x17 = Channel 1 ADC high data byte

Command reg masks;
7 6 5 4 3 2 1 0
7 = CMD
6, 5 = TRANSACTION
4, 3, 2, 1 = ADDR/SF

0xA0 = Normal write (CMD=1, TRANSACTION=01 (normal op))
0xD4 = Special Function interrupt set (force interrupt)(CMD=1, TRANSACTION=11, ADDR/SF=00100)
0xD5 = Special Function clear ALS interrupt (CMD=1, TRANSACTION=11, ADDR/SF=00110)
0xD7 = Special Function clear ALS and no persist interrupt (CMD=1, TRANSACTION=11, ADDR/SF=00111)
0xDA = Special Function clear no persist ALS interrupt (CMD=1, TRANSACTION=11, ADDR/SF=01010)

Enable reg masks;
7 6 5 4 3 2 1 0
7 = NPIEN
6 = SAI
5 = Reserved
4 = AIEN
3, 2 = Reserved
1 = AEN
0 = PON

0x01 = POWER ON
0x02 = ALS Enable
0x10 = ALS interrupt enable
0x40 = Sleep after interrupt (device will power down at end of ALS cycle)
0x80 = No persist interrupt enable

Control reg masks;
7 6 5 4 3 2 1 0
7 = SRESET
6 = Reserved
5, 4 = AGAIN
3 = Reserved
2, 1, 0 = ATIME

0x00 = ALS integration time 100ms
0x01 = ALS integration time 200ms
0x02 = ALS integration time 300ms
0x03 = ALS integration time 400ms
0x04 = ALS integration time 500ms
0x05 = ALS integration time 600ms
0x00 = ALS low gain mode
0x10 = ALS medium gain mode
0x20 = ALS high gain mode
0x30 = ALS max gain mode
0x80 = System reset - equivalent to POR

Persist reg masks; (sets number of consecutive out of range ALS cycles needed to gen interrupt)
7 6 5 4 3 2 1 0
7, 6, 5, 4 = Reserved
3, 2, 1, 0 = APERS

0x00 = Every ALS cycle generates interrupt
0x01 = Any value outside of threshold range
0x02 = 2 cycles
0x03 = 3 cycles
0x04 = 5 cycles
0x05 = 10 cycles
0x06 = 15 cycles
0x07 = 20 cycles
0x08 = 25 cycles
0x09 = 30 cycles
0x0A = 35 cycles
0x0B = 40 cycles
0x0C = 45 cycles
0x0D = 50 cycles
0x0E = 55 cycles
0x0F = 60 cycles

PID reg masks; (id of device package)
7 6 5 4 3 2 1 0
7,6,3,2,1,0 = Reserved
5,4 = package id (00)

0x30 = Package ID

ID reg; (device ID)
7:0 = ID (val = 0x50)

Status reg masks;
7 6 5 4 3 2 1 0
7,6,3,2,1 = Reserved
5 = NPINTR
4 = AINT
0 = AVALID

0x00 = ALS valid - indicates that the ADC channels have completed a cycle since AEN was asserted
0x10 = ALS interrupt - indicates an interrupt is being asserted
0x20 = No persist interrupt - indicates no persist interrupt condition has encountered

Refer to this repo for configuration process and read/write: https://github.com/adafruit/Adafruit_TSL2591_Library

****************************

FLOW OF CONTROL (SETUP);
1. Read DEVICE_ID (CMD_BIT | DEVICE_ID)
2. Enable device and device interrupt (CMD_BIT | REG_ENABLE, POWER_ON | ALS_ENABLE | ALS_INT_ENABLE | ALS_NO_PERSIST_INT_ENABLE)
3. Set timing and gain (CMD_BIT | REG_CONTROL, DEFAULT_100MS_INT, DEFAULT_MED_GAIN)

FLOW OF CONTROL (READING);
1. Enable device
2. Wait integration time for ADC to complete e.g. 100ms
2.b. Call get status and check for AVALID
3. Read IR + Visible (Combined) -> Read channel 0 (CMD_BIT | CHAN0_LOW) and (CMD_BIT | CHAN0_HIGH)
4. Read IR -> Read channel 1 (CMD_BIT | CHAN1_LOW) and (CMD_BIT | CHAN1_HIGH)
5. Read Visible -> Read channel 0 and channel 1 -> Do channel 0 - channel 1 (Combined - IR)

****************************

FLOW OF CONTROL (Interrupt driven - setup);
1. Read DEVICE_ID (CMD_BIT | DEVICE_ID)
2. Enable device and device interrupt (CMD_BIT | REG_ENABLE, POWER_ON | ALS_ENABLE | ALS_INT_ENABLE | ALS_NO_PERSIST_INT_ENABLE)
3. Set timing and gain (CMD_BIT | REG_CONTROL, DEFAULT_100MS_INT, DEFAULT_MED_GAIN)
4. Clear interrupt (SPECIAL FUNCTION | CLEAR ALS AND NO PERSIST ALS INTERRUPT )
5. Register interrupt - Lower, upper threshold and persist any (ALS thresholds and APERS)


FLOW OF CONTROL (Interrupt driven - reading);

****************************
1. Enable device
2. Wait integration time for ADC to complete e.g. 100ms
3. Read IR + Visible (Combined) -> Read channel 0 (CMD_BIT | CHAN0_LOW) and (CMD_BIT | CHAN0_HIGH)
4. Read IR -> Read channel 1 (CMD_BIT | CHAN1_LOW) and (CMD_BIT | CHAN1_HIGH)
5. Read Visible -> Read channel 0 and channel 1 -> Do channel 0 - channel 1 (Combined - IR)
6. Can call status register to check status and see if interrupt was fired. IRQ vs POLL


TSL2772 Lux calculation;
-------------------------
AGAIN = 1, 8, 16, 120
ATIME = 256 - Integration time / 2.73ms
e.g. time = 101ms
e.g. 256 - 101 / 2.73 = 57

CPL = (ATIME_ms * AGAINx) / (GA * 60)
Lux1 = (1 * C0DATA - 1.87 * C1DATA) / CPL
Lux2 = (0.63 * C0DATA - 1 * C1DATA) / CPL
Lux = MAX of Lux1, Lux2 or 0

TSL2591 Lux calculation (based on Adafruit app);
------------------------------------------------
AGAIN = 1, 25, 428, 9876
ATIME = 100, 200, 300, 400, 500, 600

CPL = (ATIME_ms * AGAINx) / LUX DF (408 -> Lux coefficient)
Lux1 = (C0DATA - 1.64 * C1DATA) / CPL
Lux2 = (0.59 * C0DATA - 0.86 * C1DATA) / CPL
Lux = MAX of Lux1, Lux2 or 0

Alternate;
lux = ((C0DATA - C1DATA) * (1 - (C1DATA / C0DATA))) / CPL
e.g. AGAIN = 8, ATIME = 200, C0DATA = 1000, C1DATA = 50
CPL = (200 * 8) / 408 = 4
lux = ((1000 - 50) * (1 - (50 / 1000))) / 4 = 226
lux = ((65535 - 65535) * (1 - (65535 / 65535))) / 4 = 226
